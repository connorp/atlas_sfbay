
Testing the integration branch image:

# 2022-0203: worked in Mint, not Zorin... base layer is build from CentOS machine and stored in hub.docker :-\
# has R 4.1.2, verified to contain apollo, tidyverse
docker pull                       ghcr.io/lbnl-science-it/atlas:v1.0.2
docker run -it --entrypoint=bash  ghcr.io/lbnl-science-it/atlas:v1.0.2
docker pull                       tin6150/atlas:v1.0.2
docker pull                       ghcr.io/lbnl-science-it/atlas:integration # commit da35dd2 = v1.0.2

docker tag ghcr.io/lbnl-science-it/atlas:v1.0.2 tin6150/atlas:v1.0.2
docker push tin6150/atlas:v1.0.2



~~~~~

r for atlas eta project - dev notes

        #@@ docker build -t lbnl-science-it/atlas -f Dockerfile .  | tee Dockerfile.monolithic.LOG
        #@@ docker tag lbnl-science-it/atlas tin6150/atlas
        docker build -t tin6150/atlas -f Dockerfile .  | tee Dockerfile.monolithic.LOG
        docker push     tin6150/atlas                     # worked :)
        docker run  -it --entrypoint=bash   tin6150/atlas

        # docker run  -it --entrypoint=bash   lbnl-science-it/atlas  # not sure if docker hub exist for lbnl-science-it




(see tin6150/r4eta for additional build commands)




manual build
------------

  docker build -t tin6150/atlas:ubuntu -f Dockerfile . | tee Dockerfile.log
  docker push     tin6150/atlas:ubuntu 
  docker tag      tin6150/atlas:ubuntu tin6150/atlas:integrationU
  docker push     tin6150/atlas:integrationU                           # just to be very obvious this is same as integration branch, rebuild cuz of ubuntu compatibility problem.
  # and strangely, this image works in the aws ubuntu instance, but NOT the ghcr one.  unsure why at this point.

